//find the maximum consicutive ones if we flip the zero to one by k times.



public class Main {
    public static void main(String[] args) {
       
            int[] arr = {1,1,0,0,1,1,1,1,1};
            int k = 1;
            
            int start = 0;
            int zeroCount = 0;
            int maxConsOne = 0;
            
            
            for(int end=0;   end<arr.length;   end++){
                    if(arr[end] == 0){
                            zeroCount++;
                    }
                    
                    
                    while(zeroCount > k){
                            
                            if(arr[start] == 0)
                            {
                                    zeroCount--;
                            }
                             start++;
                    }
                    
                    
                    maxConsOne = Math.max(maxConsOne , end-start+1);
                    
            }
            System.out.println("maximum consicutive onse is :" + maxConsOne);
    }
}

OUTPUT = maximum consicutive onse is :6
        time complexity=  O(N).
