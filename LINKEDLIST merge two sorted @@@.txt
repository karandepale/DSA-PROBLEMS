class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        
            ListNode newNode = new ListNode(0);
            ListNode curr = newNode;
            
            ListNode temp1 = list1;
            ListNode temp2 = list2;
            
            while(temp1 != null   &&   temp2 != null){
                    if(temp1.val <= temp2.val){
                            curr.next = temp1;
                            temp1 = temp1.next;
                    }
                    else{
                            curr.next = temp2;
                            temp2 = temp2.next;
                    }
                    curr = curr.next;
            }
            
            if(temp1 != null){
                    curr.next = temp1;
            }
            if(temp2 != null){
                    curr.next = temp2;
            }
            return newNode.next;
    }
}

time    :> O(L1 + L2)
space  :> O















class Node{
        int data;
        Node next;
        
        Node(int data){
                this.data = data;
        }
}

class Main{
        public static void main (String[] args){
                Scanner sc = new Scanner (System.in);
                int  n1 = sc.nextInt();
                
                Node temp1 = null;
                Node head1 = null;
                
                for(int i=0;   i<n1;   i++){
                        int data = sc.nextInt();
                        
                        if(head1 == null){
                                head1 = new Node (data);
                                temp1 = head1;
                        }
                        else{
                                temp1.next = new Node(data);
                                temp1 = temp1.next;
                        }
                }
                
                int n2 = sc.nextInt();
                
                Node temp2 = null;
                Node head2 = null;
                
                for(int i=0;   i<n2;   i++){
                        int data = sc.nextInt();
                        
                        if(head2 == null){
                                head2 = new Node(data);
                                temp2 = head2;
                        }
                        else{
                                temp2.next = new Node(data);
                                temp2 = temp2.next;
                        }
                }
                
                
                
                
                System.out.println("  1st input sorted list:- ");
                printList1 ( head1 );
                System.out.println();
                
                System.out.println(" 2nd input sortwd list :- ");
                printList2 ( head2 );
                System.out.println();
                
                System.out.println("merged list");
                Node  head =  mergeTwoSortedList ( head1 ,  head2 );
                printMergeList(head);
                
        }
        
        public static void printMergeList ( Node head ){
                if(head == null){
                        return;
                }
                while(head  !=  null){
                        System.out.print(head.data + " ");
                        head = head.next;
                }
        }
        
        
        
        
        
        
        
        
        
        
        
        public static void printList1 (Node head1){
                if(head1 == null){
                        return;
                }
                while(head1 != null){
                        System.out.print(head1.data + " ");
                        head1 = head1.next;
                }
        }
        
        public static void printList2 (Node head2){
                if(head2 == null){
                        return;
                }
                while(head2 != null){
                        System.out.print(head2.data + " ");
                        head2 = head2.next;
                }
        }
        
        public static Node mergeTwoSortedList ( Node head1 , Node head2){
                Node newNode = new Node (0);
                Node curr = newNode;
                
                
                Node temp1 = head1;
                Node temp2 = head2;
                
                while(temp1 != null  &&  temp2 != null){
                if( temp1.data <= temp2.data ){
                        curr.next = temp1;
                        temp1 = temp1.next;
                }
                
                else{
                        curr.next = temp2;
                        temp2 = temp2.next;
                }
                        curr = curr.next;
                }
                        
                        if(temp1 != null){
                                curr.next = temp1;
                        }
                        if(temp2 != null){
                                curr.next = temp2;
                        }
                return newNode.next;
              
        }
        
        
        
}

