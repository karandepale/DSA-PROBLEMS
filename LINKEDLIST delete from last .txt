//delete any certain position node from the last.

lass Node{
        int x;
        Node next;
        Node (int x){
                this.x = x;
        }
}

class main{
        public static void main(String[] args){
                
                Node head = new Node(10);
                head.next = new Node(20);
                head.next.next = new Node(30);
                head.next.next.next = new Node(40);
                head.next.next.next.next = new Node(50);
                
                printList (head);
                System.out.println();
              head =  deleteFromLast(head , 3);
                 printList (head);
                
        }
        
        
        
        
        public static void printList(Node head ){
                if(head == null){
                        return ;
                }
                while(head != null){
                        System.out.print(head.x + " ");
                        head = head.next;
                }
        }
        
        
        
        
        public static Node deleteFromLast (Node head , int n){
              
                Node start = head;
                
                Node slow = start;
                Node fast = start;
                
                for(int i=1;   i<=n;   i++){
                        fast = fast.next;
                }
                
                while(fast.next != null){
                        fast = fast.next;
                        slow = slow.next;
                }
                slow.next = slow.next.next;
                return head;
        }
        
}

OUTPUT = 
given list:-    10 20 30 40 50 
 after deleting 3rd node from last :-           10 20 40 50 
time complexity      =   O(N)
space complexity    =   O(1).