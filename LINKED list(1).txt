class Node{
        int x;
        Node next;
        
        Node(int x){
                this.x = x;
        }
}

class Main {
        public static void main(String[] args){
                
                Scanner sc = new Scanner(System.in);
                int n = sc.nextInt();
                
                Node head = null;
                Node temp = null;
                
                for(int i=0;   i<n;   i++){
                        int x = sc.nextInt();
                        
                        if(head == null){
                                head = new Node(x);
                                temp = head;
                        }
                        else {
                                temp.next = new Node(x);
                                temp = temp.next;
                        }
                }
                
                System.out.println("linked list is:");
                printList ( head);
                
                System.out.println();
                System.out.println();
                
                System.out.println("after adding at the first position :");
                head =   addFirst(head , 100);
                printList ( head);
                
                System.out.println();
                 System.out.println();
                
                System.out.println("after addding at the last position:");
                head = addLast(head , 500);
                 printList ( head);
        
                 System.out.println();
                System.out.println();
                
                System.out.println("after deleting at the first position:");
                   head=deleteFirst(head);
                printList ( head);
         
                 System.out.println();
                System.out.println();
                
                System.out.println("after deleting at the last position :");
                deleteLast(head);
                 printList ( head);
        }
        
        public static void printList (Node head){
                while(head != null){
                        System.out.print( head.x + " ");
                        head = head.next;
                }
        }
        
        
        public static Node addFirst( Node head , int k){
                if(head == null){
                        head = new Node(k);
                }
                else {
                        Node naya = new Node(k);
                        naya.next = head;
                        head = naya;
                }
                return head;
        }
        
        
        
        public static Node addLast ( Node head , int k){
                if(head == null){
                        head = new Node(k);
                        return head;
                }
                else {
                        Node temp ;
                        temp = head;
                        while(temp.next !=  null){
                                temp = temp.next;
                        }
                        temp.next = new Node(k);
                        return head;
                }
        }
        
        
        
        
        public static Node deleteFirst ( Node head){
                if(head == null){
                        return head;
                }
                
                else{
                        head = head.next;
                         return head;
                }
        }
        
        
        
        
        public static void deleteLast (Node head){
                if(head == null){
                        return ;
                }
                
                else {
                        Node temp = head;
                        Node prev = null;
                        
                        while(temp.next !=  null){
                                prev = temp ;
                                temp = temp.next;
                        }
                        prev.next = null;
                }   
        }
        
        
}



OUTPUT=

linked list is:
1 2 3 4 5 

after adding at the first position :
100 1 2 3 4 5 

after addding at the last position:
100 1 2 3 4 5 500 

after deleting at the first position:
1 2 3 4 5 500 

after deleting at the last position :
1 2 3 4 5 