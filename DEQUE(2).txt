public class Main {
    public static void main(String[] args) {
        
            int[] arr =  { 3,1,5,4,2,8,5,6,7 };
            int k = 3;
            
            Deque < Integer > dq = new LinkedList <Integer> ();
            for(int i=0;   i<k;   i++){
                    while( !dq.isEmpty()   &&    arr[dq.peekLast()] <=arr[i]  ){
                            dq.pollLast();
                    }
                    dq.addFirst(i);
            }
            
            
            
            for(int i=k;   i<arr.length;   i++){
                    System.out.print( arr[dq.peekFirst()] +" " );
                    while( !dq.isEmpty()   &&    dq.peekFirst()<=i-k ){
                            dq.pollFirst();
                    }
                    while( !dq.isEmpty()   &&    arr[dq.peekLast()]  <= arr[i] ){
                            dq.pollLast();
                    }
                    dq.add(i);
            }
            System.out.print(arr[dq.peekFirst()] + " ");
    }
}


Time complexity      :  O(N)
Given array is       :  3,1,5,4,2,8,5,6,7
window size is       :  3
maximum elements are :  5 5 5 8 8 8 7 
        
    

