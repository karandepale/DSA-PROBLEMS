public class Main {
    public static void main(String[] args) {
        
            int[] arr = {  8,4,9,2,1,6,4,10,7};
            System.out.println("array elements are:>");
            for(int i=0;   i<arr.length;   i++){
            System.out.print(arr[i] + " ");
            }
            System.out.println();
            int[] nge = new int[arr.length];
            
            Stack <Integer> st = new Stack <>();
            st.push(arr.length-1);
            
            nge[arr.length-1] = arr.length;
            
            for(int i=arr.length-2;    i>=0;    i--){
                    
                    while(st.size()>0   &&   arr[i]>arr[st.peek()]){
                            st.pop();
                    }
                    if(st.size() == 0){
                            nge[i] = arr.length;
                    }
                    else {
                            nge[i] = st.peek();
                    }
                    st.push(i);
            }
            System.out.println("next greater elements indexes is:");
            for(int i=0;   i<nge.length;  i++){
                    System.out.print(nge[i] + " ");
            }
            System.out.println();
            
            int k=4;
            int j=0;
            
            System.out.println("greater elements in every window");
            for(int i=0;   i<arr.length-k+1;   i++){
                    if(j<i){
                            j=i;
                    }
                    while (nge[j] < i+k){
                            j = nge[j];
                    }
                    System.out.print(arr[j] + " ");
            }
            System.out.println();
    }
}
time complexity = O(N).
output = 
array elements are:>
8 4 9 2 1 6 4 10 7 
next greater elements indexes is:
2 2 7 5 5 7 7 9 9 
greater elements in every window
9 9 9 6 10 10 